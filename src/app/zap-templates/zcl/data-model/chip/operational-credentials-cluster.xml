<?xml version="1.0"?>
<!--
Copyright (c) 2021-2024 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/service_device_management/OperationalCredentialCluster.adoc
Parameters: in-progress 
Git: 0.9-fall2024-87-gcdfdb86be-dirty
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <struct name="FabricDescriptorStruct" isFabricScoped="true">
    <cluster code="0x003E"/>
    <item fieldId="1" name="RootPublicKey" type="octet_string" length="65" minLength="65"/>
    <item fieldId="2" name="VendorID" type="vendor_id"/>
    <item fieldId="3" name="FabricID" type="fabric_id"/>
    <item fieldId="4" name="NodeID" type="node_id"/>
    <item fieldId="5" name="Label" type="char_string" length="32"/>
  </struct>

  <enum name="NodeOperationalCertStatusEnum" type="enum8">
    <cluster code="0x003E"/>
    <item name="OK" value="0x00"/>
    <item name="InvalidPublicKey" value="0x01"/>
    <item name="InvalidNodeOpId" value="0x02"/>
    <item name="InvalidNOC" value="0x03"/>
    <item name="MissingCsr" value="0x04"/>
    <item name="TableFull" value="0x05"/>
    <item name="InvalidAdminSubject" value="0x06"/>
    <item name="ReservedForFutureUse" value="0x07"/>
    <item name="ReservedForFutureUse" value="0x08"/>
    <item name="FabricConflict" value="0x09"/>
    <item name="LabelConflict" value="0x0A"/>
    <item name="InvalidFabricIndex" value="0x0B"/>
  </enum>

  <struct name="NOCStruct" isFabricScoped="true">
    <cluster code="0x003E"/>
    <item fieldId="1" name="NOC" type="long_octet_string" isFabricSensitive="true" length="400"/>
    <item fieldId="2" name="ICAC" type="long_octet_string" isNullable="true" isFabricSensitive="true" length="400"/>
  </struct>

  <enum name="CertificateChainTypeEnum" type="enum8">
    <cluster code="0x003E"/>
    <item name="DACCertificate" value="0x01"/>
    <item name="PAICertificate" value="0x02"/>
  </enum>

  <cluster>
    <domain name="General"/>
    <name>Operational Credentials</name>
    <code>0x003E</code>
    <define>OPERATIONAL_CREDENTIALS_CLUSTER</define>
    <description>This cluster is used to add or remove Operational Credentials on a Commissionee or Node, as well as manage the associated Fabrics.</description>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <attribute side="server" code="0x0000" define="NOCS" type="array" entryType="NOCStruct" length="254">
      <description>NOCs</description>
      <access op="read" privilege="administer"/>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0001" define="FABRICS" type="array" entryType="FabricDescriptorStruct" length="254">
      <description>Fabrics</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0002" define="SUPPORTED_FABRICS" type="int8u" min="5" max="254">
      <description>SupportedFabrics</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0003" define="COMMISSIONED_FABRICS" type="int8u" max="254">
      <description>CommissionedFabrics</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0004" define="TRUSTED_ROOT_CERTIFICATES" type="array" entryType="octet_string" length="254">
      <description>TrustedRootCertificates</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0005" define="CURRENT_FABRIC_INDEX" type="int8u" default="0">
      <description>CurrentFabricIndex</description>
      <mandatoryConform/>
    </attribute>
    <command source="client" code="0x00" name="AttestationRequest" response="AttestationResponse" optional="false">
      <description>This command SHALL be generated to request the Attestation Information, in the form of an AttestationResponse Command.</description>
      <arg id="0" name="AttestationNonce" type="octet_string" length="32" minLength="32"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="server" code="0x01" name="AttestationResponse" optional="false" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to an Attestation Request command.</description>
      <arg id="0" name="AttestationElements" type="octet_string"/>
      <arg id="1" name="AttestationSignature" type="octet_string" length="64" minLength="64"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x02" name="CertificateChainRequest" response="CertificateChainResponse" optional="false">
      <description>If the CertificateType is not a valid value per CertificateChainTypeEnum then the command SHALL fail with a Status Code of INVALID_COMMAND.</description>
      <arg id="0" name="CertificateType" type="CertificateChainTypeEnum" min="0x00" max="0x02"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="server" code="0x03" name="CertificateChainResponse" optional="false" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a CertificateChainRequest command.</description>
      <arg id="0" name="Certificate" type="long_octet_string" length="600"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x04" name="CSRRequest" response="CSRResponse" optional="false">
      <description>This command SHALL be generated to execute the Node Operational CSR Procedure and subsequently return the NOCSR Information, in the form of a CSRResponse Command.</description>
      <arg id="0" name="CSRNonce" type="octet_string" length="32" minLength="32"/>
      <arg id="1" name="IsForUpdateNOC" type="boolean" optional="true" default="0"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <!-- TODO: Fix to match chip-spec:#3346 -->
    <command source="server" code="0x05" name="CSRResponse" optional="false" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to a CSRRequest Command.</description>
      <arg id="0" name="NOCSRElements" type="octet_string"/>
      <arg id="1" name="AttestationSignature" type="octet_string" length="64" minLength="64"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x06" name="AddNOC" response="NOCResponse" optional="false">
      <description>This command SHALL add a new NOC chain to the device and commission a new Fabric association upon successful validation of all arguments and preconditions.</description>
      <arg id="0" name="NOCValue" type="long_octet_string" length="400"/>
      <arg id="1" name="ICACValue" type="long_octet_string" optional="true" length="400"/>
      <arg id="2" name="IPKValue" type="octet_string" length="16" minLength="16"/>
      <arg id="3" name="CaseAdminSubject" type="int64u"/>
      <arg id="4" name="AdminVendorId" type="vendor_id"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x07" name="UpdateNOC" response="NOCResponse" isFabricScoped="true" optional="false">
      <description>This command SHALL replace the NOC and optional associated ICAC (if present) scoped under the accessing fabric upon successful validation of all arguments and preconditions.</description>
      <arg id="0" name="NOCValue" type="long_octet_string" length="400"/>
      <arg id="1" name="ICACValue" type="long_octet_string" optional="true" length="400"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="server" code="0x08" name="NOCResponse" optional="false" disableDefaultResponse="true">
      <description>This command SHALL be generated in response to the following commands: </description>
      <arg id="0" name="StatusCode" type="NodeOperationalCertStatusEnum" min="0x00" max="0x0B"/>
      <arg id="1" name="FabricIndex" type="fabric_idx" optional="true" min="1" max="254"/>
      <arg id="2" name="DebugText" type="char_string" optional="true" length="128"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x09" name="UpdateFabricLabel" response="NOCResponse" isFabricScoped="true" optional="false">
      <description>This command SHALL be used by an Administrator to set the user-visible Label field for a given Fabric, as reflected by entries in the Fabrics attribute.</description>
      <arg id="0" name="Label" type="char_string" length="32"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x0A" name="RemoveFabric" response="NOCResponse" optional="false">
      <description>This command is used by Administrators to remove a given Fabric and delete all associated fabric-scoped data.</description>
      <arg id="0" name="FabricIndex" type="fabric_idx" min="1" max="254"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x0B" name="AddTrustedRootCertificate" optional="false">
      <description>This command SHALL add a Trusted Root CA Certificate, provided as its Matter Certificate Encoding representation, to the TrustedRootCertificates Attribute list and SHALL ensure the next AddNOC command executed uses the provided certificate as its root of trust.</description>
      <arg id="0" name="RootCACertificate" type="long_octet_string" length="400"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

  </cluster>
</configurator>
