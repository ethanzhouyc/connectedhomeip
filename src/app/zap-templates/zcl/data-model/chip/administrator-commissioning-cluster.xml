<?xml version="1.0"?>
<!--
Copyright (c) 2021-2024 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src/service_device_management/AdminCommissioningCluster.adoc
Parameters: in-progress 
Git: 0.9-fall2024-87-gcdfdb86be-dirty
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="General"/>
  <enum name="StatusCodeEnum" type="enum8">
    <cluster code="0x003c"/>
    <item name="Busy" value="0x02"/>
    <item name="PAKEParameterError" value="0x03"/>
    <item name="WindowNotOpen" value="0x04"/>
  </enum>

  <enum name="CommissioningWindowStatusEnum" type="enum8">
    <cluster code="0x003c"/>
    <item name="WindowNotOpen" value="0x00"/>
    <item name="EnhancedWindowOpen" value="0x01"/>
    <item name="BasicWindowOpen" value="0x02"/>
  </enum>

  <cluster>
    <name>Administrator Commissioning</name>
    <domain name="General"/>
    <code>0x003c</code>
    <define>ADMINISTRATOR_COMMISSIONING_CLUSTER</define>
    <description>Commands to trigger a Node to allow a new Administrator to commission it.</description>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <globalAttribute code="0xFFFD" side="either" value="1"/>
    <features>
      <feature bit="0" code="BC" name="Basic" summary="Node supports Basic Commissioning Method.">
        <optionalConform/>
      </feature>
    </features>
    <attribute side="server" code="0x0000" define="WINDOW_STATUS" type="CommissioningWindowStatusEnum" min="0x00" max="0x02">
      <description>WindowStatus</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0001" define="ADMIN_FABRIC_INDEX" type="fabric_idx" isNullable="true">
      <description>AdminFabricIndex</description>
      <mandatoryConform/>
    </attribute>
    <attribute side="server" code="0x0002" define="ADMIN_VENDOR_ID" type="vendor_id" isNullable="true">
      <description>AdminVendorId</description>
      <mandatoryConform/>
    </attribute>
    <command source="client" code="0x00" name="OpenCommissioningWindow" mustUseTimedInvoke="true" optional="false">
      <description>This command is used by a current Administrator to instruct a Node to go into commissioning mode.</description>
      <arg id="0" name="CommissioningTimeout" type="int16u"/>
      <arg id="1" name="PAKEPasscodeVerifier" type="octet_string"/>
      <arg id="2" name="Discriminator" type="int16u" min="0" max="4095"/>
      <arg id="3" name="Iterations" type="int32u" min="1000" max="100000"/>
      <arg id="4" name="Salt" type="octet_string" length="32" minLength="16"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x01" name="OpenBasicCommissioningWindow" mustUseTimedInvoke="true" optional="true">
      <description>This command MAY be used by a current Administrator to instruct a Node to go into commissioning mode, if the node supports the Basic Commissioning Method.</description>
      <arg id="0" name="CommissioningTimeout" type="int16u"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform>
        <feature name="BC"/>
      </mandatoryConform>
    </command>

    <command source="client" code="0x02" name="RevokeCommissioning" mustUseTimedInvoke="true" optional="false">
      <description>This command is used by a current Administrator to instruct a Node to revoke any active Open Commissioning Window or Open Basic Commissioning Window command.</description>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

  </cluster>
</configurator>
